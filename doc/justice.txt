*justice.txt*     Auto-generated from README.md. Do not make PRs to this file.

==============================================================================
Table of Contents                                  *justice-table-of-contents*

1. nvim-justice                                        |justice-nvim-justice-|
  - Features                                  |justice-nvim-justice--features|
  - Installation                          |justice-nvim-justice--installation|
  - Configuration                        |justice-nvim-justice--configuration|
  - Usage                                        |justice-nvim-justice--usage|
  - About the author                  |justice-nvim-justice--about-the-author|

==============================================================================
1. nvim-justice                                        *justice-nvim-justice-*

Lightweightintegration of the just <https://github.com/casey/just> task runner
in nvim.



- |justice-features|
- |justice-installation|
- |justice-configuration|
- |justice-usage|
- |justice-about-the-author|


FEATURES                                      *justice-nvim-justice--features*

- **Quick-select** recipes via keys shown at the left of the window. Running
    recipes thus requires only 2–3 keystrokes.
- Output results in a notification window or in the quickfix list.
- Supports streaming output (e.g., when a recipe outputs a progress bar.)
- Inspect recipes and variable values.
- Hide specific recipes, useful to always exclude recipes that require user
    input.


INSTALLATION                              *justice-nvim-justice--installation*

**Requirements** - nvim 0.10+ - just <https://github.com/casey/just> -
_optional:_ snacks.nvim <http://github.com/folke/snacks.nvim> (required for
streaming output) - _optional:_ Treesitter parser for syntax highlighting
(`:TSInstall just`)

>lua
    -- lazy.nvim
    {
        "chrisgrieser/nvim-justice",
        keys = {
            { "<leader>j", function() require("justice").select() end, desc = "Justice" },
        },
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-justice",
    }
    vim.keymap.set("n", "<leader>j", function() require("justice").select() end, { desc = "Justice" })
<


CONFIGURATION                            *justice-nvim-justice--configuration*

The `setup` call is optional.

>lua
    -- default settings
    require("justice").setup {
        recipes = {
            ignore = { "run-fzf" }, -- for recipes that require user input
            streaming = { "run-streaming" }, -- streams output, e.g. for progress bars (requires `snacks.nvim`)
            quickfix = {}, -- runs synchronously and sends output to quickfix list
            commentMaxLen = 35, -- truncate recipe comments if longer
        },
        keymaps = {
            next = "<Tab>",
            prev = "<S-Tab>",
            runRecipe = "<CR>",
            closeWin = { "q", "<Esc>" },
            quickSelect = { "f", "d", "s", "a" },
            showRecipe = "<Space>",
            showVariables = "?",
        },
        highlights = {
            quickSelect = "Conditional",
            icons = "Function",
        },
        icons = {
            just = "󰖷",
            streaming = "ﲋ",
            quickfix = "",
            ignore = "󰈉",
        },
    }
<


USAGE                                            *justice-nvim-justice--usage*

- `require("justice").select()`
- Navigate the window via `<Tab>` & `<S-Tab>`, select with `<CR>`.
- **Quick-select** recipes via keys shown at the left of the window.
- Show recipe via `<Space>`.


ABOUT THE AUTHOR                      *justice-nvim-justice--about-the-author*

In my day job, I am a sociologist studying the social mechanisms underlying the
digital economy. For my PhD project, I investigate the governance of the app
economy and how software ecosystems manage the tension between innovation and
compatibility. If you are interested in this subject, feel free to get in
touch.

I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

- Academic Website <https://chris-grieser.de/>
- Mastodon <https://pkm.social/@pseudometa>
- ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser>
- LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>



Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
